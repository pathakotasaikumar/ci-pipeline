UnitTest:
  SecurityRules:
    - !ruby/object:IamSecurityRule
      roles:
        - TestComponent.LambdaSecretManagementExecutionRole
      resources:
        - arn:aws:s3:::qcp-secret-management-bucket/*
      actions:
        - s3:GetObject
        - s3:GetObjectVersion
      condition:
    - !ruby/object:IamSecurityRule
      roles:
        - TestComponent.LambdaSecretManagementExecutionRole
      resources:
        - arn:aws:ssm:ap-southeast-2:123456789012:parameter/platform/ams01/c031/99/dev/master/1/*
      actions:
        - ssm:PutParameter
      condition:
    - !ruby/object:IamSecurityRule
      roles:
        - TestComponent.LambdaSecretManagementExecutionRole
      resources:
        - arn:aws:ssm:ap-southeast-2:123456789012:parameter/platform/ams01/c031/99/dev/master/1/*
      actions:
        - ssm:DeleteParameter
        - ssm:DeleteParameters
        - ssm:DescribeParameters
        - ssm:GetParameter
        - ssm:GetParameters
        - ssm:GetParametersByPath
      condition:
    - !ruby/object:IamSecurityRule
      roles:
        - TestComponent.LambdaSecretManagementExecutionRole
      resources:
        - "*"
      actions:
        - ec2:CreateNetworkInterface
        - ec2:DescribeNetworkInterfaces
        - ec2:DeleteNetworkInterface
        - ec2:DescribeInstances
        - ec2:AttachNetworkInterface
        - ec2:DetachNetworkInterface
        - ec2:ModifyNetworkInterfaceAttribute
        - ec2:ResetNetworkInterfaceAttribute
        - autoscaling:CompleteLifecycleAction
      condition:
    - !ruby/object:IamSecurityRule
      roles:
        - TestComponent.LambdaSecretManagementExecutionRole
      resources:
        - arn:aws:logs:*:*:*
      actions:
        - logs:CreateLogStream
        - logs:PutLogEvents
      condition:
    - !ruby/object:IamSecurityRule
      roles:
        - TestComponent.LambdaSecretManagementExecutionRole
      resources:
        - arn:/secrets_key_arn
      actions:
        - kms:Describe*
        - kms:Encrypt
        - kms:GenerateDataKey
        - kms:GenerateDataKeyWithoutPlaintext
        - kms:GenerateRandom
        - kms:ReEncrypt*
      condition:
  Platform_secrets_metadata:
    KmsId: "arn:/secrets_key_arn"
    SecretsStorageBucket: "qcp-secret-management-bucket"
    SecretsStorageFileLocation: "platform-secrets-storage/secrets.json"
    Sections: '{"ams":"ams01","qda":"c031","as":"99","ase":"dev","ase_number":"","plan_key":"ams01-c031s99dev","branch":"master","build":"5","env":"nonp","asbp_type":"qda"}'
    AwsProxy: http://proxy.qcpaws.qantas.com.au:3128

  SecretManagementOutput:
    Resources:
      SecretManagementLambda:
        Type: AWS::Lambda::Function
        Properties:
          Handler: platform_secret_management.handler
          Role: arn:aws:iam:ap-southeast-2:111111111111:role/LambdaSecretManagementExecutionRole
          Runtime: python3.9
          Code:
            S3Bucket: qcp-pipeline-lambda-artefacts
            S3Key: cd/ams01/c031/99/dev/master/5/platform.zip
          Timeout: 300
          KmsKeyArn: arn:aws:kms:ap-southeast-2:123456789012:key/12345678-1234-1234-1234-123456789012
      SecretManagementLambdaLogGroup:
        Type: AWS::Logs::LogGroup
        Properties:
          LogGroupName:
            Fn::Join:
              - ""
              - - "/aws/lambda/"
                - Ref: SecretManagementLambda
          RetentionInDays: 30
      SecretManagementTopic:
        Type: AWS::SNS::Topic
        Properties:
          Subscription:
            - Endpoint:
                Fn::GetAtt:
                  - SecretManagementLambda
                  - Arn
              Protocol: lambda
      SecretManagementLifecycleHook:
        Type: AWS::AutoScaling::LifecycleHook
        Properties:
          AutoScalingGroupName:
            Ref: AutoscalingGroup
          DefaultResult: ABANDON
          LifecycleTransition: autoscaling:EC2_INSTANCE_LAUNCHING
          NotificationTargetARN:
            Ref: SecretManagementTopic
          RoleARN: arn:aws:ap-southeast-2:111111111111:autoscaling:lifecyclehook
          HeartbeatTimeout: 300
          NotificationMetadata: '[{"ams":"ams01","qda":"c031","as":"01","ase":"dev"}]'
      SecretManagementLambdaPermission:
        Type: AWS::Lambda::Permission
        Properties:
          Action: lambda:InvokeFunction
          FunctionName:
            Fn::GetAtt:
              - SecretManagementLambda
              - Arn
          Principal: sns.amazonaws.com
          SourceArn:
            Ref: SecretManagementTopic
      SecretManagementTerminationLambda:
        Type: AWS::Lambda::Function
        Properties:
          Handler: platform_secret_management_param_deletion.handler
          Role: arn:aws:iam:ap-southeast-2:111111111111:role/LambdaSecretManagementExecutionRole
          Runtime: python3.9
          Code:
            S3Bucket: qcp-pipeline-lambda-artefacts
            S3Key: cd/ams01/c031/99/dev/master/5/platform.zip
          Timeout: 300
          KmsKeyArn: arn:aws:kms:ap-southeast-2:123456789012:key/12345678-1234-1234-1234-123456789012
      SecretManagementTerminationLambdaLogGroup:
        Type: AWS::Logs::LogGroup
        Properties:
          LogGroupName:
            Fn::Join:
              - ""
              - - "/aws/lambda/"
                - Ref: SecretManagementTerminationLambda
          RetentionInDays: 30
      SecretManagementTerminationTopic:
        Type: AWS::SNS::Topic
        Properties:
          Subscription:
            - Endpoint:
                Fn::GetAtt:
                  - SecretManagementTerminationLambda
                  - Arn
              Protocol: lambda
      SecretManagementTerminationLifecycleHook:
        Type: AWS::AutoScaling::LifecycleHook
        Properties:
          AutoScalingGroupName:
            Ref: AutoscalingGroup
          DefaultResult: ABANDON
          LifecycleTransition: autoscaling:EC2_INSTANCE_TERMINATING
          NotificationTargetARN:
            Ref: SecretManagementTerminationTopic
          RoleARN: arn:aws:ap-southeast-2:111111111111:autoscaling:lifecyclehook
          HeartbeatTimeout: 300
          NotificationMetadata: '[{"ams":"ams01","qda":"c031","as":"01","ase":"dev"}]'
      SecretManagementTerminationLambdaPermission:
        Type: AWS::Lambda::Permission
        Properties:
          Action: lambda:InvokeFunction
          FunctionName:
            Fn::GetAtt:
              - SecretManagementTerminationLambda
              - Arn
          Principal: sns.amazonaws.com
          SourceArn:
            Ref: SecretManagementTerminationTopic
    Outputs:
      SecretManagementLambdaName:
        Description: Name of the function
        Value:
          Ref: SecretManagementLambda
      SecretManagementLambdaArn:
        Description: Arn of the function
        Value:
          Fn::GetAtt:
            - SecretManagementLambda
            - Arn
      SecretManagementTopicName:
        Description: Topic Name
        Value:
          Fn::GetAtt:
            - SecretManagementTopic
            - TopicName
      SecretManagementTopicArn:
        Description: Topic Arn
        Value:
          Ref: SecretManagementTopic
      SecretManagementTerminationLambdaName:
        Description: Name of the function
        Value:
          Ref: SecretManagementTerminationLambda
      SecretManagementTerminationLambdaArn:
        Description: Arn of the function
        Value:
          Fn::GetAtt:
            - SecretManagementTerminationLambda
            - Arn
      SecretManagementTerminationTopicName:
        Description: Topic Name
        Value:
          Fn::GetAtt:
            - SecretManagementTerminationTopic
            - TopicName
      SecretManagementTerminationTopicArn:
        Description: Topic Arn
        Value:
          Ref: SecretManagementTerminationTopic

  SecretManagementInstanceOutput:
    Resources:
      SecretManagementLambda:
        Type: AWS::Lambda::Function
        Properties:
          Handler: platform_secret_management.handler
          Role: arn:aws:iam:ap-southeast-2:111111111111:role/LambdaSecretManagementExecutionRole
          Runtime: python3.9
          Code:
            S3Bucket: qcp-pipeline-lambda-artefacts
            S3Key: cd/ams01/c031/99/dev/master/5/platform.zip
          Timeout: 300
          Environment:
            Variables:
              KmsId: arn:aws:kms:ap-southeast-2:123456789012:key/12345678-1234-1234-1234-123456789012
              SecretsStorageBucket: qcp-secret
              SecretsStorageFileLocation: qcp-secret-location
          KmsKeyArn: arn:aws:kms:ap-southeast-2:123456789012:key/12345678-1234-1234-1234-123456789012
      SecretManagementLambdaLogGroup:
        Type: AWS::Logs::LogGroup
        Properties:
          LogGroupName:
            Fn::Join:
              - ""
              - - "/aws/lambda/"
                - Ref: SecretManagementLambda
          RetentionInDays: 30
    Outputs:
      SecretManagementLambdaName:
        Description: Name of the function
        Value:
          Ref: SecretManagementLambda
      SecretManagementLambdaArn:
        Description: Arn of the function
        Value:
          Fn::GetAtt:
            - SecretManagementLambda
            - Arn
