---
Type: aws/alb
Stage: 01-test
Persist: false
IngressPoint: true
Configuration:
  ApplicationELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
  Listener80:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Port: 80
      Protocol: HTTP
      DefaultActions:
      - Type: redirect
        RedirectConfig:
          Host: "#{host}"
          Path: "/#{path}"
          Port: 443
          Protocol: HTTPS
          Query: "#{query}"
          StatusCode: HTTP_302
  Listener443:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Port: 443
      Protocol: HTTPS
      Certificates:
      - CertificateArn: "@wildcard-qcpaws"
      DefaultActions:
      - TargetGroupArn: Group1
        Type: forward
  RuleHighPriority:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn:
          Ref: Group1
      Conditions:
      - Field: path-pattern
        Values:
        - "/lambda/*"
      ListenerArn:
        Ref: Listener443
      Priority: 1
  Group1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      TargetType: lambda
      Targets:
      - Id: "@alb-lambda-fn.DeployArn"
      HealthCheckIntervalSeconds: 60